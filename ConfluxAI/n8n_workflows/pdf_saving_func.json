{
  "name": "saving_data",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pdf-ingest",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -672,
        176
      ],
      "id": "8f63aceb-5194-4bd5-8575-6c0ae49da669",
      "name": "Webhook (PDF Upload)",
      "webhookId": "7ad54353-8e73-402f-aba4-d2d0d8083294"
    },
    {
      "parameters": {
        "functionCode": "// Paragraph-based chunking: join small paragraphs until chunk length threshold is reached.\n// this function reads text from items[0].json.text and tries to get filename from json.fileName or binary file metadata.\nconst text = items[0].json.text || items[0].json.plainText || '';\nlet filename = items[0].json.fileName || items[0].json.source || null;\nif (!filename && items[0].binary) {\n  const keys = Object.keys(items[0].binary);\n  if (keys.length) filename = items[0].binary[keys[0]].fileName || keys[0];\n}\nfilename = filename || 'uploaded.pdf';\n\nconst paragraphs = text.split(/\\n\\s*\\n+/).map(p => p.trim()).filter(Boolean);\nconst chunks = [];\nlet current = '';\nconst MAX_CHARS = 1200; // adjust for approx token size (empirical)\nfor (const p of paragraphs) {\n  if ((current + '\\n\\n' + p).length > MAX_CHARS) {\n    if (current) {\n      chunks.push(current.trim());\n      current = p;\n    } else {\n      // single paragraph > MAX_CHARS, push it as a chunk\n      chunks.push(p);\n      current = '';\n    }\n  } else {\n    current = current ? (current + '\\n\\n' + p) : p;\n  }\n}\nif (current) chunks.push(current.trim());\n\nreturn chunks.map((c, i) => ({ json: { chunk: c, chunkIndex: i, source: filename, createdAt: new Date().toISOString() } }));"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -112,
        160
      ],
      "id": "57d0062b-4d1e-4157-b02f-9db472241d93",
      "name": "Paragraph Chunker",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "={{ $json.chunk }}"
            },
            {
              "name": "source",
              "value": "={{ $json.source }}"
            },
            {
              "name": "chunkIndex",
              "value": "={{ $json.chunkIndex }}"
            },
            {
              "name": "createdAt",
              "value": "={{ $json.createdAt }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        160,
        160
      ],
      "id": "45c88eb2-b65f-4ecb-9f9c-cfe5999b0cb0",
      "name": "Prepare for Embedding"
    },
    {
      "parameters": {
        "batchSize": 8,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        400,
        160
      ],
      "id": "074c26fb-0d26-420a-adfe-22ffa27e97ea",
      "name": "SplitInBatches (rate control)"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1200,
        160
      ],
      "id": "b8b1fefe-d383-4972-9132-a9e3a4652f1c",
      "name": "Respond"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "index1",
          "mode": "list",
          "cachedResultName": "index1"
        },
        "embeddingBatchSize": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        640,
        176
      ],
      "id": "f4b197ed-1862-416e-833c-453a9e36d6a3",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "g8deX4j2MOCEJz8o",
          "name": "PineconeApi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        608,
        512
      ],
      "id": "19e8e75f-fa8d-4afd-aa22-000f6fe3fdd0",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "qNeo4iE7bxaRRs5g",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        848,
        384
      ],
      "id": "f5e7532b-e013-46b0-a75e-4ba6cb38c9fe",
      "name": "Default Data Loader"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook (PDF Upload)": {
      "main": [
        [
          {
            "node": "Paragraph Chunker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Paragraph Chunker": {
      "main": [
        [
          {
            "node": "Prepare for Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare for Embedding": {
      "main": [
        [
          {
            "node": "SplitInBatches (rate control)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches (rate control)": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9edba373-4dc3-4e0e-854d-a2ae7a85a514",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6499e5de7985ff0038ea0e0c452fe8b107bfa42ac278b66233ecd909148ffaf0"
  },
  "id": "C1hK3jdtB8L5bkb4",
  "tags": []
}